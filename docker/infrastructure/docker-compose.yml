services:
  rabbitmq:
    image: masstransit/rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules/blackbox-exporter.yml:/etc/prometheus/blackbox-exporter.yml
      - ./prometheus/rules/embedded-exporter.yml:/etc/prometheus/embedded-exporter.yml
      - ./prometheus/rules/google-cadvisor.yml:/etc/prometheus/google-cadvisor.yml
      - ./prometheus/rules/node-exporter.yml:/etc/prometheus/node-exporter.yml
      - ./prometheus/rules/rules-example.yml:/etc/prometheus/rules-example.yml
      - ./prometheus/config/web-config.yml:/prometheus/web-config.yml
      - ./certificates/prometheus/prometheus.key:/home/prometheus/certs/local/prometheus.key
      - ./certificates/prometheus/prometheus.crt:/home/prometheus/certs/local/prometheus.crt
    # healthcheck:
    #   test: wget -q --tries=1 --no-check-certificate -O- https://localhost:9090/-/ready
    #   interval: 3s
    #   timeout: 3s
    #   retries: 10
    #   start_period: 10s
    command:
      - "--web.config.file=/prometheus/web-config.yml"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    command:
      - "--port=8080"
      - "--housekeeping_interval=30s"
      - "--docker_only=true"
      - "--disable_metrics=percpu,sched,tcp,udp,disk,diskIO,accelerator,hugetlb,referenced_memory,cpu_topology,resctrl"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:8080/healthz || exit 1
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - 9100:9100
    restart: unless-stopped

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    ports:
      - 9115:9115
    volumes:
      - ./blackbox:/config
    command:
      - '--config.file=/config/blackbox.yml'
    restart: unless-stopped

  speedtest-exporter:
    image: miguelndecarvalho/speedtest-exporter:latest
    container_name: speedtest-exporter
    ports:
      - 9798:9798
    restart: unless-stopped

  alert-manager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./prometheus/config/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - 9093:9093
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:9093/-/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped
      
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "8025:8025"
    restart: unless-stopped

  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 3110:80
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd1!
    ports:
      - "1433:1433"
    restart: unless-stopped
    volumes:
      - mssql-data:/var/opt/mssql

volumes:
  grafana-storage:
    external: true
  mongo-data:
  mssql-data:
