services:
  rabbitmq:
    image: masstransit/rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail.yaml:/etc/promtail/docker-config.yaml:ro
      - ./promtail/log:/var/log
      # - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yaml
      - loki-data:/tmp/loki
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules/blackbox-exporter.yml:/etc/prometheus/blackbox-exporter.yml
      - ./prometheus/rules/embedded-exporter.yml:/etc/prometheus/embedded-exporter.yml
      - ./prometheus/rules/google-cadvisor.yml:/etc/prometheus/google-cadvisor.yml
      - ./prometheus/rules/node-exporter.yml:/etc/prometheus/node-exporter.yml
      - ./prometheus/rules/rules-example.yml:/etc/prometheus/rules-example.yml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:9090/-/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    ports:
      - 9090:9090
    depends_on:
      - cadvisor

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    command:
      - "--port=8080"
      - "--housekeeping_interval=30s"
      - "--docker_only=true"
      - "--disable_metrics=percpu,sched,tcp,udp,disk,diskIO,hugetlb,referenced_memory,cpu_topology,resctrl"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:8080/healthz || exit 1
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 30s

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - 9100:9100

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    ports:
      - 9115:9115
    volumes:
      - ./blackbox:/config
    command:
      - "--config.file=/config/blackbox.yml"

  speedtest-exporter:
    image: miguelndecarvalho/speedtest-exporter:latest
    container_name: speedtest-exporter
    ports:
      - 9798:9798

  alert-manager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./prometheus/config/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - 9093:9093

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      cadvisor:
        condition: service_healthy
    volumes:
      - grafana-storage:/var/lib/grafana

  mailpit:    
    image: axllent/mailpit
    container_name: mailpit
    # volumes:
    #   - ./data:/data
    ports:
      - 8025:8025
    environment:
      MP_MAX_MESSAGES: 5000
      # MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 3110:80

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

  mssql:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=P@ssw0rd1!
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/mssql/data

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 9080:80  # Expose Nginx on port 9080
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Nginx configuration file
    depends_on:
      - prometheus

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  grafana-storage:
    external: true
  mongo-data:
  mssql-data:
  loki-data:
