version: "3.4"
services:

  rabbitmq:
    image: masstransit/rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./rules.yml:/etc/prometheus/rules.yml"
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:9090/-/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    ports:
      - 9090:9090
    depends_on:
      - cadvisor

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - 9100:9100

  alert-manager:
    image: prom/alertmanager
    container_name: alertmanager
    depends_on:
      - vault
    environment:
      - DISCORD_WEBHOOK_URL=$(vault kv-get -field=data secret/prometheus/alertmanager/discord_configs)
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - 9093:9093

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    volumes:
      - grafana-storage:/var/lib/grafana

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "8025:8025"

  seq: 
    image: datalust/seq:latest
    container_name: seq
    depends_on:
      - vault
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 3110:80
    restart: unless-stopped

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"  # Vault API port
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"  # Use only in development mode
      VAULT_ADDR: "http://localhost:8200"
    volumes:
      - ./vault-data:/vault/data  # Persistent storage for Vault data
    cap_add:
      - IPC_LOCK  # Required for mlock to improve security

volumes:
  grafana-storage:
    external: true
